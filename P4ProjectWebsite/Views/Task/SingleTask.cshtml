@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@model IEnumerable<TaskEntity>
@{
    ViewData["Title"] = "SingleTask";
}
@foreach (var row in Model)
{

    <h1>@row.Title</h1>
    <h2>@row.Category</h2>
    <h3>Date Created: @row.DateCreated</h3>
    <div>
        <p>
            @row.Description
        </p>
        <p>
            Place: @row.Location
        </p>
        @if (@row.Bid == 10000)
        {
            <p>
                Current bid: Not yet bid
            </p>
        }
        else
        {
            <p>
                Current bid: @row.Bid DKK by @row.CreatedBy"
            </p>
        }
    </div>
    @if ((await AuthorizationService.AuthorizeAsync(User, "ContributorAccess")).Succeeded)
    {
        <form asp-controller="Task" asp-action="SendBid" asp-route-taskId="@row.Id" asp-route-CurrentBid="@row.Bid" method="post">
            <label for="Bid">Bid :</label>
            <input type="number" id="newBid" name="Bid">DKK
            <input type="submit" onclick="validateForm(@row.Bid)" id="submitButton" value="Bid on task" />
        </form>
    }
}
<script>
    function validateForm(currentBid) {
        var newBid = document.getElementById("newBid").value;
        if (newBid > currentBid) {
            alert("Error: Your bid is higher than the current bid. Make a lower Bid.");
        } else {
            alert("Bid Successfully");
        }
    }
</script>

